# This is a comment.
# syntax-documentation:
#  - https://python-poetry.org/docs/pyproject
#  - https://flit.readthedocs.io/en/latest/pyproject_toml.html
#
# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 88
target_version = ["py310"]
include = '\.py$'          # regex -> needs single-quotes


[tool.coverage.html]
directory = "var/html/coverage"

[tool.coverage.xml]
output = "var/html/coverage/coverage.xml"

[tool.coverage.report]
# cfr. https://coverage.readthedocs.io/en/coverage-4.2/excluding.html
exclude_lines = [
  "pragma: no cover",
  # "raise AssertionError",
  # "raise NotImplementedError",
  # "if 0:",
  # "if __name__ == .__main__.:",
]
include = ["src/*"]

[tool.coverage.run]
branch = true
data_file = "var/cache/coverage/coverage.db" # defaults to .coverage
omit = ["src/sitecustomize/_vendor/*"]


[tool.flake8]
max_line_length = 88


[tool.mypy]
# cfr https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
cache_dir = "var/cache/mypy"
exclude = "^src/sitecustomize/_vendor/"
ignore_missing_imports = true
pretty = true                           # more verbose multiline output
show_column_numbers = true
show_error_codes = true
show_error_context = true


[tool.poetry]
name = "sitecustomize-entrypoints"
version = "1.1.0"
description = "Sitecustomize-module that executes all correctly registered ``sitecustomize``-entypoints."
keywords = ["entrypoints", "sitecustomize"]
authors = [
  "Dos Moonen <d.moonen@nki.nl>",
  "Wouter Vanden Hove <wouter@libranet.eu>",
]
maintainers = [
  "Dos Moonen <d.moonen@nki.nl>",
  "Wouter Vanden Hove <wouter@libranet.eu>",
]
license = "MIT"
readme = "docs/readme.md"
documentation = "https://sitecustomize-entrypoints.readthedocs.io"
homepage = "https://github.com/Darsstar/sitecustomize-entrypoints"
repository = "https://github.com/Darsstar/sitecustomize-entrypoints"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Typing :: Typed",
]
packages = [{ include = "sitecustomize", from = "src" }]


[tool.poetry.dependencies]
python = ">=3.7.2"

[tool.poetry.group.dev.dependencies]
black = ">=23.1.0"
flake8-bugbear = ">=23.2.13"
flake8-pyproject = ">=0.0"
mypy = ">=1.1.1"
pyroma = ">=4.2"
pytest = ">=7.2.1"
ruff = ">=0.0.260"

[tool.poetry.group.docs.dependencies]
autoapi = ">=2.0.1"
myst-parser = ">=1.0.0"
recommonmark = ">=0.7.1"
Sphinx = ">=4.4.0"
sphinx-autoapi = ">=1.8.4"
sphinx-rtd-theme = ">=1.0.0"

[tool.poetry.group.testing.dependencies]
pytest = ">=7.0"
pytest-cov = ">=4.0.0"

[tool.poetry-dynamic-versioning]
enable = true

[tool.poetry-dynamic-versioning.substitution]
files = ["src/*/__init__.py"]


[tool.pytest.ini_options]
addopts = "--junit-xml='var/html/coverage/pytest.xml'"
cache_dir = "var/cache/pytest"
testpaths = ["tests"]


[tool.ruff]
cache-dir = "var/cache/ruff" # relative to this file


[tool.vendoring]
destination = "src/sitecustomize/_vendor/"
requirements = "src/sitecustomize/_vendor/vendor.txt"
namespace = "sitecustomize._vendor"
protected-files = ["__init__.py", "README.rst", "vendor.txt"]

[tool.vendoring.transformations]
drop = [
  # contains unnecessary scripts
  "bin/",
]

[tool.vendoring.typing-stubs]
six = []
distro = []

[tool.vendoring.license.directories]

[tool.vendoring.license.fallback-urls]
