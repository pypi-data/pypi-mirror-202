[options.entry_points]
pytest_randomly.random_seeder = 
	reseed = alibi_detect.utils._random:set_seed

[aliases]
test = pytest

[tool:pytest]
addopts = 
	--tb native
	-W ignore
	--cov=alibi_detect

[flake8]
max-line-length = 120
exclude = 
	doc/source/conf.py
	.eggs/

[mypy]
ignore_missing_imports = True
strict_optional = False
show_error_codes = True

[mypy-conf]
ignore_errors = True

[tox:tox]
envlist = 
	default
	tensorflow
	torch
	prophet
	keops
	all

[testenv:licenses]
basepython = python
deps = 
	pip-licenses
	typing_extensions # not present with py38
	idna-ssl # not present with py36
	dataclasses # not present with py36
	importlib-metadata # not present with py38
	zipp # not present with py38
	fsspec # not present with py36
	locket # not present with py36
	partd # not present with py36
commands = 
	pip-licenses \
	--from=mixed \
	--format=csv \
	--output-file=./licenses/license_info.csv
	pip-licenses \
	--from=mixed \
	--format=plain-vertical \
	--with-license-file \
	--no-license-path \
	--output-file=./licenses/license.txt

[testenv:default]
basepython = python
deps = pytest
	pytest-cov
	pytest-randomly
passenv = COMMAND
commands = {env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=default}

[testenv:tensorflow]
basepython = python
deps = pytest
	pytest-cov
	pytest-randomly
extras = 
	tensorflow
commands = 
	{env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=tensorflow}

[testenv:torch]
basepython = python
deps = pytest
	pytest-cov
	pytest-randomly
extras = 
	torch
commands = 
	{env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=torch}

[testenv:prophet]
basepython = python
deps = pytest
	pytest-cov
	pytest-randomly
extras = 
	prophet
commands = 
	{env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=prophet}

[testenv:keops]
basepython = python
deps = pytest
	pytest-cov
	pytest-randomly
extras = 
	keops
commands = 
	{env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=keops}

[testenv:all]
basepython = python
deps = pytest
	pytest-cov
	pytest-randomly
extras = 
	all
commands = 
	{env:COMMAND:pytest --no-cov alibi_detect/tests/test_dep_management.py --opt-dep=all}

[egg_info]
tag_build = 
tag_date = 0

