Metadata-Version: 2.1
Name: xbee900-HIT
Version: 0.1.2
Summary: A small package to send/receive fragmented data with XBee 900
Author-email: Zhiyuan Cao <caozhiyuan@stu.hit.edu.cn>
License: Copyright (c) <year> <copyright holders>
        
        Anti 996 License Version 1.0 (Draft)
        
        Permission is hereby granted to any individual or legal entity obtaining a copy
        of this licensed work (including the source code, documentation and/or related
        items, hereinafter collectively referred to as the "licensed work"), free of
        charge, to deal with the licensed work for any purpose, including without
        limitation, the rights to use, reproduce, modify, prepare derivative works of,
        publish, distribute and sublicense the licensed work, subject to the following
        conditions:
        
        1.  The individual or the legal entity must conspicuously display, without
            modification, this License on each redistributed or derivative copy of the
            Licensed Work.
        
        2.  The individual or the legal entity must strictly comply with all applicable
            laws, regulations, rules and standards of the jurisdiction relating to
            labor and employment where the individual is physically located or where
            the individual was born or naturalized; or where the legal entity is
            registered or is operating (whichever is stricter). In case that the
            jurisdiction has no such laws, regulations, rules and standards or its
            laws, regulations, rules and standards are unenforceable, the individual
            or the legal entity are required to comply with Core International Labor
            Standards.
        
        3.  The individual or the legal entity shall not induce or force its
            employee(s), whether full-time or part-time, or its independent
            contractor(s), in any methods, to agree in oral or written form,
            to directly or indirectly restrict, weaken or relinquish his or
            her rights or remedies under such laws, regulations, rules and
            standards relating to labor and employment as mentioned above,
            no matter whether such written or oral agreement are enforceable
            under the laws of the said jurisdiction, nor shall such individual
            or the legal entity limit, in any methods, the rights of its employee(s)
            or independent contractor(s) from reporting or complaining to the copyright
            holder or relevant authorities monitoring the compliance of the license
            about its violation(s) of the said license.
        
        THE LICENSED WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
        FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT
        HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
        OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN ANY WAY CONNECTION
        WITH THE LICENSED WORK OR THE USE OR OTHER DEALINGS IN THE LICENSED WORK.
        
Project-URL: Homepage, https://gitee.com/czy_hit/xbee
Project-URL: Bug Tracker, https://gitee.com/czy_hit/xbee
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE.txt

# xbee900_HIT
## Installation
```python
python3 -m pip install xbee900_HIT
```
## Example
### send
```python
from xbee900_HIT import xbee
import logging
logging.basicConfig(filename='xbee.log',
                    format='%(asctime)s %(message)s', level=logging.INFO)


def send():
    device = xbee.Xbee('/dev/tty.usbserial-2', 9600)
    with open('3KB.txt', 'rb') as f:
        data = f.read()
        # broadcast
        device.send_packet(data)

    with open('1KB.txt', 'rb') as f:
        data = f.read()
        # point2point
        device.send_packet(data, remoteAddr="0013A20041BB7684")


send()

```

### receive

```python
from xbee900_HIT import xbee
import logging

logging.basicConfig(filename='xbee.log',
                    format='%(asctime)s %(message)s', level=logging.INFO)


def receive():
    device = xbee.Xbee('/dev/tty.usbserial-1', 230400)
    while True:
        data, remote = device.receive_packet()
        print(f'from {remote} :length of data:{len(data)},receive data: {data}')


receive()
```
