
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right,nonassoc:nonassoc?leftORleftANDleftCMP_OPnonassocNOTleftINleftRELATION_DEFTYPEDEF_INNEROPERAND_LISTEMPTYNS_REFVAR_REFMAP_LOOKUPleftCIDIDleft([leftMLSAND AS CID CMP_OP DEFINED DICT ELIF ELSE END ENTITY EXTENDS FALSE FLOAT FOR ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS NOT NULL OR PARENTS PEQ REGEX REL RSTRING SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : head bodyhead : %prec EMPTYhead : MLSbody : top_stmt bodybody : emptytop_stmt : entity_def\n    | implement_def\n    | implementation_def\n    | relation\n    | statement\n    | typedef\n    | index\n    | importempty : %prec EMPTYimport : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n    | for\n    | if\n    | expressionstmt_list : statement stmt_liststmt_list : emptyassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF if_body ENDif_body : expression \':\' stmt_list if_nextif_next : emptyif_next : ELSE \':\' stmt_listif_next : ELIF if_bodyentity_def : ENTITY CID \':\' entity_body_outerentity_def : ENTITY ID \':\' entity_body_outerentity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outerentity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outerentity_body_outer : MLS entity_body ENDentity_body_outer : entity_body ENDentity_body_outer : ENDentity_body_outer : MLS ENDentity_body : entity_body attrentity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n    | attr_base_type \'?\'attr_type : attr_type_opt\n    | attr_type_multi\n    | attr_base_typeattr : attr_type CID empty\n    | attr_type CID \'=\' constant\n    | attr_type CID \'=\' constant_list\n    | attr_type CID \'=\' UNDEFattr : attr_type IDattr : attr_type ID \'=\' constant\n    | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT empty CID empty\n    | DICT empty CID \'=\' map_def\n    | DICT empty CID \'=\' NULL\n    | DICT \'?\' CID empty\n    | DICT \'?\'  CID \'=\' map_def\n    | DICT \'?\'  CID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_ns_list : ns_refimplement_ns_list : PARENTSimplement_ns_list : implement_ns_list \',\' implement_ns_listimplement_def : IMPLEMENT class_ref USING implement_ns_list empty\n    | IMPLEMENT class_ref USING implement_ns_list MLSimplement_def : IMPLEMENT class_ref USING implement_ns_list WHEN expression empty\n    | IMPLEMENT class_ref USING implement_ns_list WHEN expression MLSimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : implementation_head blockimplementation_head : \':\'implementation_head : \':\' MLSblock : stmt_list ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID MLSrelation : relation_def MLSrelation : relation_def %prec RELATION_DEFrelation_def : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi REL class_refrelation_def : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\'multi : \'[\' INT \':\' \']\'multi : \'[\' INT \':\' INT \']\'multi : \'[\'  \':\' INT \']\'typedef : typedef_inner %prec TYPEDEF_INNERtypedef : typedef_inner MLStypedef_inner : TYPEDEF ID AS ns_ref MATCHING expressiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\'expression : boolean_expression\n    | constant\n    | function_call\n    | var_ref %prec VAR_REF\n    | constructor\n    | list_def\n    | map_def\n    | map_lookup %prec MAP_LOOKUP\n    | index_lookup\n    | conditional_expressionexpression : \'(\' expression \')\'boolean_expression : expression CMP_OP expression\n    | expression IN expression\n    | expression AND expression\n    | expression OR expressionboolean_expression : NOT expressionboolean_expression : var_ref \'.\' ID IS DEFINEDboolean_expression : ID IS DEFINEDboolean_expression : map_lookup IS DEFINEDoperand : expressionmap_lookup : attr_ref \'[\' operand \']\'\n    | var_ref \'[\' operand \']\'\n    | map_lookup \'[\' operand \']\'constructor : class_ref \'(\' param_list \')\'function_call : ns_ref \'(\' function_param_list \')\'function_call : attr_ref \'(\' function_param_list \')\'list_def : \'[\' operand_list \']\'dict_key : RSTRINGdict_key : STRINGpair_list : dict_key \':\' operand \',\' pair_list\n    | dict_key \':\' operand empty pair_list_emptypair_list : pair_list_empty\n    pair_list_empty : emptymap_def : \'{\' pair_list \'}\'index_lookup : class_ref \'[\' param_list \']\'index_lookup : attr_ref \'[\' param_list \']\'conditional_expression : expression \'?\' expression \':\' expressionconstant : INT\n    | FLOAT\n    constant : NULLconstant : REGEXconstant : TRUEconstant : FALSEconstant : STRINGconstant : RSTRINGconstant : MLSconstant_list : \'[\' constants \']\'constants : constantconstants :constants : constant \',\' constantswrapped_kwargs : \'*\' \'*\' operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n    param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n    | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n    function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n    | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list : %prec OPERAND_LISTvar_ref : attr_ref %prec VAR_REFattr_ref : var_ref \'.\' IDvar_ref : ns_ref %prec NS_REFclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref : var_ref \'.\' CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : ID'
    
_lr_action_items = {'ENTITY':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,115,129,130,131,132,137,142,143,151,152,153,154,156,158,165,167,169,172,184,186,187,188,194,199,205,206,210,216,218,220,221,222,226,227,241,242,246,255,256,260,264,273,282,285,286,287,290,291,292,293,294,297,301,318,319,320,321,324,334,339,340,],[-2,15,-3,15,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-174,-82,-93,-100,-174,-165,-163,-15,-112,-116,-114,-108,-109,-110,-111,-107,-167,-173,-168,-164,-23,-24,-26,-115,-123,-130,-31,-37,-32,-14,-68,-69,-120,-131,-16,-121,-118,-119,-95,-122,-117,-132,-38,-36,-71,-72,-88,-133,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPLEMENT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,115,129,130,131,132,137,142,143,151,152,153,154,156,158,165,167,169,172,184,186,187,188,194,199,205,206,210,216,218,220,221,222,226,227,241,242,246,255,256,260,264,273,282,285,286,287,290,291,292,293,294,297,301,318,319,320,321,324,334,339,340,],[-2,18,-3,18,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-174,-82,-93,-100,-174,-165,-163,-15,-112,-116,-114,-108,-109,-110,-111,-107,-167,-173,-168,-164,-23,-24,-26,-115,-123,-130,-31,-37,-32,-14,-68,-69,-120,-131,-16,-121,-118,-119,-95,-122,-117,-132,-38,-36,-71,-72,-88,-133,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPLEMENTATION':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,115,129,130,131,132,137,142,143,151,152,153,154,156,158,165,167,169,172,184,186,187,188,194,199,205,206,210,216,218,220,221,222,226,227,241,242,246,255,256,260,264,273,282,285,286,287,290,291,292,293,294,297,301,318,319,320,321,324,334,339,340,],[-2,22,-3,22,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-174,-82,-93,-100,-174,-165,-163,-15,-112,-116,-114,-108,-109,-110,-111,-107,-167,-173,-168,-164,-23,-24,-26,-115,-123,-130,-31,-37,-32,-14,-68,-69,-120,-131,-16,-121,-118,-119,-95,-122,-117,-132,-38,-36,-71,-72,-88,-133,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'INDEX':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,115,129,130,131,132,137,142,143,151,152,153,154,156,158,165,167,169,172,184,186,187,188,194,199,205,206,210,216,218,220,221,222,226,227,241,242,246,255,256,260,264,273,282,285,286,287,290,291,292,293,294,297,301,318,319,320,321,324,334,339,340,],[-2,29,-3,29,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-174,-82,-93,-100,-174,-165,-163,-15,-112,-116,-114,-108,-109,-110,-111,-107,-167,-173,-168,-164,-23,-24,-26,-115,-123,-130,-31,-37,-32,-14,-68,-69,-120,-131,-16,-121,-118,-119,-95,-122,-117,-132,-38,-36,-71,-72,-88,-133,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPORT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,115,129,130,131,132,137,142,143,151,152,153,154,156,158,165,167,169,172,184,186,187,188,194,199,205,206,210,216,218,220,221,222,226,227,241,242,246,255,256,260,264,273,282,285,286,287,290,291,292,293,294,297,301,318,319,320,321,324,334,339,340,],[-2,31,-3,31,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-174,-82,-93,-100,-174,-165,-163,-15,-112,-116,-114,-108,-109,-110,-111,-107,-167,-173,-168,-164,-23,-24,-26,-115,-123,-130,-31,-37,-32,-14,-68,-69,-120,-131,-16,-121,-118,-119,-95,-122,-117,-132,-38,-36,-71,-72,-88,-133,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'CID':([0,2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,20,21,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,87,88,89,90,91,92,96,99,100,101,103,104,112,114,115,117,129,130,131,132,134,135,137,138,139,142,143,151,152,153,154,156,157,158,161,165,166,167,168,169,172,174,175,176,177,178,179,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,223,226,227,231,232,234,235,238,239,241,242,243,245,246,249,250,255,256,257,258,259,260,264,268,270,273,281,282,285,286,287,290,291,292,293,294,296,297,299,301,318,319,320,321,324,334,339,340,],[-2,16,-3,16,-6,-7,-8,-9,-10,-11,-12,-13,58,-166,-174,16,-142,-20,-83,-17,-18,-19,-92,16,16,-165,-100,16,-97,-98,-99,-101,-102,-103,-104,-105,-106,98,-163,16,-134,-135,-136,-137,-138,-139,-140,-141,16,-174,16,16,16,16,16,-82,-93,-100,-174,-165,-163,-15,142,16,151,16,16,16,16,16,16,-112,-161,-116,16,16,-114,151,-108,-109,-110,-111,16,16,-107,151,142,-167,-173,-168,-164,-23,-24,-26,16,-115,16,-123,16,-130,16,-31,-37,229,-14,-45,-46,-47,-41,-32,-14,-68,-69,16,-120,16,16,-131,16,-16,-121,16,-118,16,-100,-165,-119,-95,-122,-117,-132,-160,-38,-36,277,278,-43,-44,16,16,-71,-72,16,16,-88,16,16,-133,-75,16,-77,16,-96,-113,16,16,-35,-42,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,16,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'FOR':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,75,77,78,81,82,83,84,86,101,104,115,129,130,131,132,137,142,143,151,152,153,154,156,157,158,165,167,169,172,184,186,187,188,194,199,205,206,210,212,214,215,216,218,220,221,222,226,227,241,242,246,255,256,257,258,259,260,264,273,282,285,286,287,290,291,292,293,294,296,297,299,301,318,319,320,321,324,334,339,340,],[-2,23,-3,23,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-174,134,-82,-93,-100,-174,-165,-163,-15,-112,-116,-114,-108,-109,-110,-111,-107,-167,-173,-168,-164,-23,-24,-26,23,-115,-123,-130,-31,-37,-32,-14,-68,-69,-120,-131,-16,-121,-118,23,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,-88,-133,-75,23,-77,23,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,23,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IF':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,115,129,130,131,132,137,142,143,151,152,153,154,156,157,158,165,167,169,172,184,186,187,188,194,199,205,206,210,212,214,215,216,218,220,221,222,226,227,241,242,246,255,256,257,258,259,260,264,273,282,285,286,287,290,291,292,293,294,296,297,299,301,318,319,320,321,324,334,339,340,],[-2,34,-3,34,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-174,-82,-93,-100,-174,-165,-163,-15,-112,-116,-114,-108,-109,-110,-111,-107,-167,-173,-168,-164,-23,-24,-26,34,-115,-123,-130,-31,-37,-32,-14,-68,-69,-120,-131,-16,-121,-118,34,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,-88,-133,-75,34,-77,34,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,34,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'(':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,19,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,79,81,82,83,84,85,86,88,90,91,92,96,99,100,101,104,115,129,130,131,132,135,137,142,143,150,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,219,220,221,222,226,227,241,242,243,246,255,256,257,258,259,260,264,268,270,273,282,285,286,287,290,291,292,293,294,296,297,299,301,318,319,320,321,324,334,339,340,],[-2,30,-3,30,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,68,-142,-20,-83,-17,-18,-19,-92,30,88,-100,30,-97,-98,-99,-101,-102,-103,-104,-105,-106,99,30,-134,-135,-136,-137,-138,-139,-140,-141,30,-174,30,30,30,30,30,-82,-93,136,-100,-174,88,99,68,-15,30,30,30,30,30,30,30,-112,-116,-114,-108,-109,-110,-111,30,-107,-167,-173,-174,-168,-164,-23,-24,-26,30,-115,-123,30,-130,30,-31,-37,-32,-14,-68,-69,30,-120,30,30,-131,30,-16,-121,30,-118,30,-100,88,-119,-95,68,-122,-117,-132,-38,-36,-71,-72,30,-88,-133,-75,30,-77,30,-96,-113,30,30,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,30,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'TYPEDEF':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,115,129,130,131,132,137,142,143,151,152,153,154,156,158,165,167,169,172,184,186,187,188,194,199,205,206,210,216,218,220,221,222,226,227,241,242,246,255,256,260,264,273,282,285,286,287,290,291,292,293,294,297,301,318,319,320,321,324,334,339,340,],[-2,44,-3,44,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-174,-82,-93,-100,-174,-165,-163,-15,-112,-116,-114,-108,-109,-110,-111,-107,-167,-173,-168,-164,-23,-24,-26,-115,-123,-130,-31,-37,-32,-14,-68,-69,-120,-131,-16,-121,-118,-119,-95,-122,-117,-132,-38,-36,-71,-72,-88,-133,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'ID':([0,2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,64,67,68,69,70,71,72,73,74,77,78,81,82,83,84,86,87,88,89,90,91,92,96,99,100,101,103,104,111,112,113,114,115,116,117,129,130,131,132,134,135,136,137,138,139,140,141,142,143,151,152,153,154,156,157,158,160,161,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,184,186,187,188,193,194,196,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,223,225,226,227,228,229,230,232,233,234,235,237,238,239,240,241,242,243,244,245,246,249,250,255,256,257,258,259,260,261,264,268,270,273,274,277,278,279,281,282,285,286,287,288,290,291,292,293,294,296,297,299,301,304,305,306,308,309,310,311,313,316,317,318,319,320,321,322,323,324,328,329,330,331,332,333,334,337,339,340,],[-2,17,-3,17,-6,-7,-8,-9,-10,-11,-12,-13,59,-166,-174,64,66,-142,-20,75,76,-83,-17,-18,-19,-92,64,82,64,-165,-100,82,-97,-98,-99,-101,-102,-103,-104,-105,-106,97,-163,82,-134,-135,-136,-137,-138,-139,-140,-141,82,-174,120,125,125,82,82,82,82,82,-82,-93,-100,-174,-165,-163,-15,143,150,152,82,82,82,82,150,150,-112,-161,-116,64,64,64,64,-114,64,189,-108,-109,-110,-111,64,82,204,-107,152,143,205,143,-167,-173,-168,-164,-23,-24,-26,82,-115,64,64,-123,82,-130,82,-31,64,64,-37,-40,230,233,-45,-46,-47,-41,-32,-14,-68,-69,82,-120,125,82,82,-131,82,-16,-121,150,-118,82,-100,-165,-119,-95,-122,-117,-132,-160,64,-38,-36,-39,-14,-52,279,-62,-43,-44,64,64,64,64,-71,-72,82,64,64,-88,64,64,-133,-75,82,-77,82,-96,204,-113,82,82,-35,-48,-14,-14,-65,-42,-33,-34,-14,-70,320,-89,-91,-85,-87,-76,-78,-25,82,-94,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-73,-74,-80,-90,335,336,-79,-57,-58,-60,-61,-66,-67,-81,-143,-84,-86,]),'NOT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,115,129,130,131,132,135,137,142,143,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,241,242,243,246,255,256,257,258,259,260,264,268,270,273,282,285,286,287,290,291,292,293,294,296,297,299,301,318,319,320,321,324,334,339,340,],[-2,46,-3,46,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,46,-165,-100,46,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,46,-134,-135,-136,-137,-138,-139,-140,-141,46,-174,46,46,46,46,46,-82,-93,-100,-174,-165,-163,-15,46,46,46,46,46,46,46,-112,-116,-114,-108,-109,-110,-111,46,-107,-167,-173,-168,-164,-23,-24,-26,46,-115,-123,46,-130,46,-31,-37,-32,-14,-68,-69,46,-120,46,46,-131,46,-16,-121,46,-118,46,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,46,-88,-133,-75,46,-77,46,-96,-113,46,46,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,46,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'INT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,115,119,129,130,131,132,135,137,142,143,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,192,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,241,242,243,246,247,255,256,257,258,259,260,264,268,270,273,275,276,282,285,286,287,290,291,292,293,294,296,297,299,301,307,318,319,320,321,324,334,338,339,340,],[-2,47,-3,47,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,47,-165,-100,47,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,47,-134,-135,-136,-137,-138,-139,-140,-141,47,-174,47,47,47,47,47,-82,-93,-100,-174,-165,-163,-15,47,47,47,47,47,47,47,-112,-116,-114,191,-108,-109,-110,-111,47,-107,-167,-173,-168,-164,-23,-24,-26,47,-115,-123,47,-130,47,-31,-37,-32,-14,-68,-69,248,47,-120,47,47,-131,47,-16,-121,47,-118,47,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,47,-88,289,-133,-75,47,-77,47,-96,-113,47,47,-35,47,47,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,47,-94,47,-73,-74,-80,-90,-79,-81,47,-84,-86,]),'FLOAT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,115,129,130,131,132,135,137,142,143,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,241,242,243,246,255,256,257,258,259,260,264,268,270,273,275,276,282,285,286,287,290,291,292,293,294,296,297,299,301,307,318,319,320,321,324,334,338,339,340,],[-2,48,-3,48,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,48,-165,-100,48,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,48,-134,-135,-136,-137,-138,-139,-140,-141,48,-174,48,48,48,48,48,-82,-93,-100,-174,-165,-163,-15,48,48,48,48,48,48,48,-112,-116,-114,-108,-109,-110,-111,48,-107,-167,-173,-168,-164,-23,-24,-26,48,-115,-123,48,-130,48,-31,-37,-32,-14,-68,-69,48,-120,48,48,-131,48,-16,-121,48,-118,48,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,48,-88,-133,-75,48,-77,48,-96,-113,48,48,-35,48,48,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,48,-94,48,-73,-74,-80,-90,-79,-81,48,-84,-86,]),'NULL':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,115,129,130,131,132,135,137,142,143,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,241,242,243,246,255,256,257,258,259,260,264,268,270,273,275,276,280,282,285,286,287,290,291,292,293,294,296,297,299,301,307,312,314,315,318,319,320,321,324,334,338,339,340,],[-2,49,-3,49,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,49,-165,-100,49,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,49,-134,-135,-136,-137,-138,-139,-140,-141,49,-174,49,49,49,49,49,-82,-93,-100,-174,-165,-163,-15,49,49,49,49,49,49,49,-112,-116,-114,-108,-109,-110,-111,49,-107,-167,-173,-168,-164,-23,-24,-26,49,-115,-123,49,-130,49,-31,-37,-32,-14,-68,-69,49,-120,49,49,-131,49,-16,-121,49,-118,49,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,49,-88,-133,-75,49,-77,49,-96,-113,49,49,-35,49,49,317,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,49,-94,49,329,331,333,-73,-74,-80,-90,-79,-81,49,-84,-86,]),'REGEX':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,115,129,130,131,132,135,137,142,143,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,241,242,243,246,255,256,257,258,259,260,264,268,270,273,275,276,282,285,286,287,290,291,292,293,294,296,297,299,301,307,318,319,320,321,324,334,338,339,340,],[-2,50,-3,50,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,50,-165,-100,50,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,50,-134,-135,-136,-137,-138,-139,-140,-141,50,-174,50,50,50,50,50,-82,-93,-100,-174,-165,-163,-15,50,50,50,50,50,50,50,-112,-116,-114,-108,-109,-110,-111,50,-107,-167,-173,-168,-164,-23,-24,-26,50,-115,-123,50,-130,50,-31,-37,-32,-14,-68,-69,50,-120,50,50,-131,50,-16,-121,50,-118,50,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,50,-88,-133,-75,50,-77,50,-96,-113,50,50,-35,50,50,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,50,-94,50,-73,-74,-80,-90,-79,-81,50,-84,-86,]),'TRUE':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,115,129,130,131,132,135,137,142,143,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,241,242,243,246,255,256,257,258,259,260,264,268,270,273,275,276,282,285,286,287,290,291,292,293,294,296,297,299,301,307,318,319,320,321,324,334,338,339,340,],[-2,51,-3,51,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,51,-165,-100,51,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,51,-134,-135,-136,-137,-138,-139,-140,-141,51,-174,51,51,51,51,51,-82,-93,-100,-174,-165,-163,-15,51,51,51,51,51,51,51,-112,-116,-114,-108,-109,-110,-111,51,-107,-167,-173,-168,-164,-23,-24,-26,51,-115,-123,51,-130,51,-31,-37,-32,-14,-68,-69,51,-120,51,51,-131,51,-16,-121,51,-118,51,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,51,-88,-133,-75,51,-77,51,-96,-113,51,51,-35,51,51,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,51,-94,51,-73,-74,-80,-90,-79,-81,51,-84,-86,]),'FALSE':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,115,129,130,131,132,135,137,142,143,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,241,242,243,246,255,256,257,258,259,260,264,268,270,273,275,276,282,285,286,287,290,291,292,293,294,296,297,299,301,307,318,319,320,321,324,334,338,339,340,],[-2,52,-3,52,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,52,-165,-100,52,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,52,-134,-135,-136,-137,-138,-139,-140,-141,52,-174,52,52,52,52,52,-82,-93,-100,-174,-165,-163,-15,52,52,52,52,52,52,52,-112,-116,-114,-108,-109,-110,-111,52,-107,-167,-173,-168,-164,-23,-24,-26,52,-115,-123,52,-130,52,-31,-37,-32,-14,-68,-69,52,-120,52,52,-131,52,-16,-121,52,-118,52,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,52,-88,-133,-75,52,-77,52,-96,-113,52,52,-35,52,52,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,52,-94,52,-73,-74,-80,-90,-79,-81,52,-84,-86,]),'STRING':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,115,129,130,131,132,135,137,142,143,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,241,242,243,246,255,256,257,258,259,260,264,268,270,271,273,275,276,282,285,286,287,290,291,292,293,294,296,297,299,301,307,318,319,320,321,324,334,338,339,340,],[-2,53,-3,53,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,53,-165,-100,53,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,53,-134,-135,-136,-137,-138,-139,-140,-141,53,110,-174,53,53,53,53,53,-82,-93,-100,-174,-165,-163,-15,53,53,53,53,53,53,53,-112,-116,-114,-108,-109,-110,-111,53,-107,-167,-173,-168,-164,-23,-24,-26,53,-115,-123,53,-130,53,-31,-37,-32,-14,-68,-69,53,-120,53,53,-131,53,-16,-121,53,-118,53,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,53,-88,-133,-75,53,-77,53,-96,-113,53,53,110,-35,53,53,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,53,-94,53,-73,-74,-80,-90,-79,-81,53,-84,-86,]),'RSTRING':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,115,129,130,131,132,135,137,142,143,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,241,242,243,246,255,256,257,258,259,260,264,268,270,271,273,275,276,282,285,286,287,290,291,292,293,294,296,297,299,301,307,318,319,320,321,324,334,338,339,340,],[-2,54,-3,54,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,54,-165,-100,54,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,54,-134,-135,-136,-137,-138,-139,-140,-141,54,109,-174,54,54,54,54,54,-82,-93,-100,-174,-165,-163,-15,54,54,54,54,54,54,54,-112,-116,-114,-108,-109,-110,-111,54,-107,-167,-173,-168,-164,-23,-24,-26,54,-115,-123,54,-130,54,-31,-37,-32,-14,-68,-69,54,-120,54,54,-131,54,-16,-121,54,-118,54,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,54,-88,-133,-75,54,-77,54,-96,-113,54,54,109,-35,54,54,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,54,-94,54,-73,-74,-80,-90,-79,-81,54,-84,-86,]),'MLS':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,111,113,115,129,130,131,132,135,137,142,143,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,237,240,241,242,243,246,255,256,257,258,259,260,264,268,270,273,275,276,282,285,286,287,290,291,292,293,294,296,297,299,301,307,318,319,320,321,324,334,338,339,340,],[3,20,-3,20,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,77,-17,-18,-19,78,20,-165,-100,20,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,20,-134,-135,-136,-137,-138,-139,-140,-141,20,-174,20,20,20,20,20,-82,-93,-100,-174,-165,-163,-15,20,20,20,20,20,20,20,-112,-116,170,170,-114,-108,-109,-110,-111,20,-107,-167,-173,-168,-164,-23,-24,-26,20,-115,-123,20,-130,20,-31,-37,-32,242,-68,-69,20,-120,20,20,-131,20,-16,-121,20,-118,20,-100,-165,-119,-95,-122,-117,-132,-38,-36,170,170,-71,-72,20,-88,-133,-75,20,296,20,-96,-113,20,20,-35,20,20,-33,-34,319,-70,-89,-91,-85,-87,-76,-78,-25,20,-94,20,-73,-74,334,-90,-79,-81,20,-84,-86,]),'[':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,19,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,66,70,71,72,73,74,77,78,81,82,83,84,85,86,88,90,91,92,96,99,100,101,104,115,120,129,130,131,132,135,137,142,143,150,151,152,153,154,156,157,158,165,166,167,168,169,172,178,179,184,186,187,188,190,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,241,242,243,246,255,256,257,258,259,260,264,268,270,273,275,276,282,285,286,287,290,291,292,293,294,296,297,299,301,318,319,320,321,324,334,335,336,339,340,],[-2,55,-3,55,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,69,-142,-20,-83,-17,-18,-19,-92,55,-165,92,55,-97,-98,-99,-101,-102,-103,96,-105,-106,100,55,-134,-135,-136,-137,-138,-139,-140,-141,55,-174,119,55,55,55,55,55,-82,-93,92,-174,-165,100,69,-15,55,55,55,55,55,55,55,-112,-116,-114,119,-108,-109,-110,-111,55,-107,-167,-173,-174,-168,-164,-23,-24,-26,55,-115,-123,55,-130,55,-31,-37,236,-41,-32,-14,-68,-69,119,55,-120,55,55,-131,55,-16,-121,55,-118,55,92,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,55,-88,-133,-75,55,-77,55,-96,-113,55,55,-35,307,307,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,55,-94,-73,-74,-80,-90,-79,-81,119,119,-84,-86,]),'{':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,115,129,130,131,132,135,137,142,143,151,152,153,154,156,157,158,165,166,167,168,169,172,184,186,187,188,193,194,197,198,199,200,205,206,208,210,212,214,215,216,218,220,221,222,226,227,241,242,243,246,255,256,257,258,259,260,264,268,270,273,280,282,285,286,287,290,291,292,293,294,296,297,299,301,312,314,315,318,319,320,321,324,334,339,340,],[-2,56,-3,56,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,56,-165,-100,56,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,56,-134,-135,-136,-137,-138,-139,-140,-141,56,-174,56,56,56,56,56,-82,-93,-100,-174,-165,-163,-15,56,56,56,56,56,56,56,-112,-116,-114,-108,-109,-110,-111,56,-107,-167,-173,-168,-164,-23,-24,-26,56,-115,-123,56,-130,56,-31,-37,-32,-14,-68,-69,56,-120,56,56,-131,56,-16,-121,56,-118,56,-100,-165,-119,-95,-122,-117,-132,-38,-36,-71,-72,56,-88,-133,-75,56,-77,56,-96,-113,56,56,-35,56,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,56,-94,56,56,56,-73,-74,-80,-90,-79,-81,-84,-86,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,57,64,77,78,81,82,83,84,86,101,104,115,129,130,131,132,137,142,143,151,152,153,154,156,158,165,167,169,172,184,186,187,188,194,199,205,206,210,216,218,220,221,222,226,227,241,242,246,255,256,260,264,273,282,285,286,287,290,291,292,293,294,297,301,318,319,320,321,324,334,339,340,],[-2,0,-14,-3,-1,-14,-5,-6,-7,-8,-9,-10,-11,-12,-13,-166,-174,-142,-20,-83,-17,-18,-19,-92,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-4,-174,-82,-93,-100,-174,-165,-163,-15,-112,-116,-114,-108,-109,-110,-111,-107,-167,-173,-168,-164,-23,-24,-26,-115,-123,-130,-31,-37,-32,-14,-68,-69,-120,-131,-16,-121,-118,-119,-95,-122,-117,-132,-38,-36,-71,-72,-88,-133,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'.':([16,17,19,32,33,45,62,63,64,65,81,82,83,84,142,143,150,151,152,182,183,189,214,215,292,293,],[-166,-174,67,-165,89,-163,-165,117,-174,-163,138,-174,-165,-163,-167,-173,-174,-168,-164,117,-165,-164,138,-165,322,323,]),'USING':([16,61,142,151,],[-166,116,-167,-168,]),',':([16,20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,64,65,81,82,83,84,101,103,104,115,123,126,129,130,131,132,137,142,143,146,148,149,150,151,152,158,165,167,181,182,183,186,187,188,189,194,199,204,206,210,216,220,221,222,224,253,254,255,264,287,327,],[-166,-142,-97,-98,-99,-101,-102,-103,-104,-105,-106,-134,-135,-136,-137,-138,-139,-140,-141,-174,-163,-100,-174,-165,-163,-112,166,-116,-114,196,-149,-108,-109,-110,-111,-107,-167,-173,208,-154,-155,-174,-168,-164,-115,-123,-130,238,239,-165,244,-68,-69,-164,-120,-131,261,-121,-118,-119,-122,-117,-132,271,-148,-147,-133,-113,244,338,]),':':([16,20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,58,59,64,65,81,82,83,84,94,101,104,106,109,110,115,119,129,130,131,132,133,137,142,143,151,152,158,165,167,180,181,182,183,185,189,191,194,199,201,202,206,210,216,220,221,222,255,264,267,283,284,],[-166,-142,-97,-98,-99,-101,-102,-103,-104,-105,-106,-134,-135,-136,-137,-138,-139,-140,-141,111,113,-174,-163,-100,-174,-165,-163,157,-112,-116,168,-124,-125,-114,192,-108,-109,-110,-111,200,-107,-167,-173,-168,-164,-115,-123,-130,237,-171,-172,-165,240,-164,247,-120,-131,258,259,-121,-118,-119,-122,-117,-132,-133,-113,299,-169,-170,]),'SEP':([17,32,62,64,82,83,86,143,150,179,183,187,215,217,],[-174,87,87,-174,-174,139,141,-173,-174,141,87,141,139,141,]),'=':([17,32,33,45,82,125,143,150,152,214,215,229,230,233,277,278,279,],[-174,-165,90,-163,-174,197,-173,197,-164,90,-165,275,276,280,312,314,315,]),'PEQ':([17,32,33,45,82,143,152,214,215,],[-174,-165,91,-163,-174,-173,-164,91,-165,]),'CMP_OP':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,80,81,82,83,84,94,101,104,115,129,130,131,132,133,137,143,150,152,158,165,167,194,199,206,210,214,215,216,220,221,222,255,264,286,301,],[-174,-142,70,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,70,-100,-174,-165,-163,70,-112,70,-114,-108,-109,70,70,70,-107,-173,-174,-164,-115,-123,-130,-120,-131,-121,-118,-100,-165,-119,-122,-117,-132,70,-113,70,70,]),'IN':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,76,80,81,82,83,84,94,101,104,115,129,130,131,132,133,137,143,150,152,158,165,167,194,199,206,210,214,215,216,220,221,222,255,264,286,301,],[-174,-142,71,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,135,71,-100,-174,-165,-163,71,71,71,-114,71,-109,71,71,71,-107,-173,-174,-164,-115,-123,-130,-120,-131,-121,-118,-100,-165,-119,-122,-117,-132,71,-113,71,71,]),'AND':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,80,81,82,83,84,94,101,104,115,129,130,131,132,133,137,143,150,152,158,165,167,194,199,206,210,214,215,216,220,221,222,255,264,286,301,],[-174,-142,72,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,72,-100,-174,-165,-163,72,-112,72,-114,-108,-109,-110,72,72,-107,-173,-174,-164,-115,-123,-130,-120,-131,-121,-118,-100,-165,-119,-122,-117,-132,72,-113,72,72,]),'OR':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,80,81,82,83,84,94,101,104,115,129,130,131,132,133,137,143,150,152,158,165,167,194,199,206,210,214,215,216,220,221,222,255,264,286,301,],[-174,-142,73,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,73,-100,-174,-165,-163,73,-112,73,-114,-108,-109,-110,-111,73,-107,-173,-174,-164,-115,-123,-130,-120,-131,-121,-118,-100,-165,-119,-122,-117,-132,73,-113,73,73,]),'?':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,80,81,82,83,84,94,101,104,115,129,130,131,132,133,137,143,150,152,158,165,167,175,177,178,179,194,199,206,210,214,215,216,220,221,222,255,264,281,286,301,],[-174,-142,74,-165,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-174,74,-100,-174,-165,-163,74,-112,74,-114,-108,-109,-110,-111,74,-107,-173,-174,-164,-115,-123,-130,232,234,235,-41,-120,-131,-121,-118,-100,-165,-119,-122,-117,-132,74,-113,-42,74,74,]),'IS':([17,41,82,150,152,210,216,221,],[60,95,60,60,209,-118,-119,-117,]),')':([20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,68,80,81,82,83,84,88,99,101,104,115,121,122,123,124,126,129,130,131,132,137,143,144,145,146,147,148,149,150,152,158,162,165,167,194,195,196,199,203,204,206,207,208,210,216,220,221,222,251,252,253,254,255,262,263,264,298,],[-142,-97,-98,-99,-101,-102,-103,-104,-105,-106,-134,-135,-136,-137,-138,-139,-140,-141,-14,137,-100,-174,-165,-163,-14,-14,-112,-116,-114,194,-150,-14,-151,-149,-108,-109,-110,-111,-107,-173,206,-156,-14,-157,-154,-155,-174,-164,-115,220,-123,-130,-120,-14,-14,-131,260,-176,-121,-14,-14,-118,-119,-122,-117,-132,-152,-153,-148,-147,-133,-158,-159,-113,-175,]),']':([20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,55,69,81,82,83,84,100,101,102,103,104,115,122,123,124,126,128,129,130,131,132,137,143,150,152,155,158,159,163,164,165,166,167,191,194,195,196,199,206,210,216,220,221,222,223,236,247,248,251,252,253,254,255,264,289,307,326,327,338,341,],[-142,-97,-98,-99,-101,-102,-103,-104,-105,-106,-134,-135,-136,-137,-138,-139,-140,-141,-162,-14,-100,-174,-165,-163,-14,-112,165,-161,-116,-114,-150,-14,-151,-149,199,-108,-109,-110,-111,-107,-173,-174,-164,210,-115,216,221,222,-123,-162,-130,246,-120,-14,-14,-131,-121,-118,-119,-122,-117,-132,-160,281,290,291,-152,-153,-148,-147,-133,-113,321,-145,337,-144,-145,-146,]),'ELSE':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,81,82,83,84,101,104,115,129,130,131,132,137,143,152,153,154,156,157,158,165,167,194,199,206,210,211,212,213,214,215,216,220,221,222,255,264,269,297,324,],[-142,-20,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-100,-174,-165,-163,-112,-116,-114,-108,-109,-110,-111,-107,-173,-164,-23,-24,-26,-14,-115,-123,-130,-120,-131,-121,-118,267,-14,-22,-100,-165,-119,-122,-117,-132,-133,-113,-21,-25,-79,]),'ELIF':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,81,82,83,84,101,104,115,129,130,131,132,137,143,152,153,154,156,157,158,165,167,194,199,206,210,211,212,213,214,215,216,220,221,222,255,264,269,297,324,],[-142,-20,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-100,-174,-165,-163,-112,-116,-114,-108,-109,-110,-111,-107,-173,-164,-23,-24,-26,-14,-115,-123,-130,-120,-131,-121,-118,268,-14,-22,-100,-165,-119,-122,-117,-132,-133,-113,-21,-25,-79,]),'END':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,81,82,83,84,93,101,104,111,113,115,129,130,131,132,137,143,152,153,154,156,157,158,165,167,170,171,173,194,199,206,210,211,212,213,214,215,216,220,221,222,225,228,229,230,233,237,240,255,257,258,259,264,265,266,269,274,277,278,279,295,296,297,299,300,304,305,306,308,309,310,311,313,316,317,324,325,328,329,330,331,332,333,337,],[-142,-20,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-105,-106,-163,-134,-135,-136,-137,-138,-139,-140,-141,-100,-174,-165,-163,156,-112,-116,172,172,-114,-108,-109,-110,-111,-107,-173,-164,-23,-24,-26,-14,-115,-123,-130,226,227,-40,-120,-131,-121,-118,-14,-14,-22,-100,-165,-119,-122,-117,-132,273,-39,-14,-52,-62,172,172,-133,-14,-77,-14,-113,-27,-28,-21,-48,-14,-14,-65,324,-78,-25,-14,-30,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-79,-29,-57,-58,-60,-61,-66,-67,-143,]),'}':([20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,56,81,82,83,84,101,104,105,107,108,115,129,130,131,132,137,143,152,158,165,167,194,199,206,210,216,220,221,222,224,255,264,271,272,302,303,],[-142,-97,-98,-99,-101,-102,-103,-104,-105,-106,-134,-135,-136,-137,-138,-139,-140,-141,-14,-100,-174,-165,-163,-112,-116,167,-129,-128,-114,-108,-109,-110,-111,-107,-173,-164,-115,-123,-130,-120,-131,-121,-118,-119,-122,-117,-132,-14,-133,-113,-14,-14,-126,-127,]),'DICT':([20,47,48,49,50,51,52,53,54,111,113,167,170,171,173,225,228,229,230,233,237,240,274,277,278,279,304,305,306,308,309,310,311,313,316,317,328,329,330,331,332,333,337,],[-142,-134,-135,-136,-137,-138,-139,-140,-141,175,175,-130,175,175,-40,175,-39,-14,-52,-62,175,175,-48,-14,-14,-65,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-57,-58,-60,-61,-66,-67,-143,]),'EXTENDS':([58,59,],[112,114,]),'DEFINED':([60,95,209,],[115,158,264,]),'AS':([64,86,97,98,143,],[-174,140,160,161,-173,]),'WHEN':([64,143,186,187,188,287,],[-174,-173,243,-68,-69,-70,]),'MATCHING':([64,143,217,],[-174,-173,270,]),'*':([68,69,88,99,100,127,196,208,],[127,127,127,127,127,198,127,127,]),'PARENTS':([116,244,],[188,188,]),'REL':([118,193,246,290,291,321,],[190,249,-88,-89,-91,-90,]),'UNDEF':([275,276,],[306,310,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'head':([0,],[2,]),'body':([2,5,],[4,57,]),'top_stmt':([2,5,],[5,5,]),'empty':([2,5,56,68,69,88,99,100,123,146,157,175,186,195,196,207,208,211,212,224,229,257,259,271,272,277,278,286,299,],[6,6,107,124,124,147,147,124,195,207,213,231,241,124,124,147,147,266,213,272,274,213,213,107,107,311,313,318,213,]),'entity_def':([2,5,],[7,7,]),'implement_def':([2,5,],[8,8,]),'implementation_def':([2,5,],[9,9,]),'relation':([2,5,],[10,10,]),'statement':([2,5,157,212,257,259,299,],[11,11,212,212,212,212,212,]),'typedef':([2,5,],[12,12,]),'index':([2,5,],[13,13,]),'import':([2,5,],[14,14,]),'class_ref':([2,5,18,29,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,112,114,134,135,157,161,166,168,193,197,198,200,208,212,238,239,243,245,249,250,257,259,268,270,299,],[19,19,61,79,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,181,181,201,85,85,219,85,85,85,85,85,85,85,85,181,181,85,288,292,293,85,85,85,85,85,]),'expression':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,135,157,166,168,193,197,198,200,208,212,243,257,259,268,270,299,],[21,21,80,94,101,104,129,130,131,132,133,104,104,104,104,104,104,104,104,21,104,104,104,104,104,255,104,21,286,21,21,94,301,21,]),'relation_def':([2,5,],[24,24,]),'assign':([2,5,157,212,257,259,299,],[25,25,25,25,25,25,25,]),'for':([2,5,157,212,257,259,299,],[26,26,26,26,26,26,26,]),'if':([2,5,157,212,257,259,299,],[27,27,27,27,27,27,27,]),'typedef_inner':([2,5,],[28,28,]),'ns_ref':([2,5,18,29,30,31,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,111,112,113,114,116,134,135,157,160,161,166,168,170,171,193,197,198,200,208,212,225,237,238,239,240,243,244,245,249,250,257,259,268,270,299,],[32,32,62,62,83,86,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,179,183,179,183,187,62,83,215,217,62,83,83,179,179,83,83,83,83,83,215,179,179,183,183,179,83,187,62,62,62,215,215,83,83,215,]),'var_ref':([2,5,18,29,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,112,114,134,135,157,161,166,168,193,197,198,200,208,212,238,239,243,245,249,250,257,259,268,270,299,],[33,33,63,63,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,182,182,63,81,214,63,81,81,81,81,81,81,81,214,182,182,81,63,63,63,214,214,81,81,214,]),'boolean_expression':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,135,157,166,168,193,197,198,200,208,212,243,257,259,268,270,299,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'constant':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,135,157,166,168,193,197,198,200,208,212,243,257,259,268,270,275,276,299,307,338,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,304,308,36,327,327,]),'function_call':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,135,157,166,168,193,197,198,200,208,212,243,257,259,268,270,299,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'constructor':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,135,157,161,166,168,193,197,198,200,208,212,243,257,259,268,270,299,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,218,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'list_def':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,135,157,166,168,193,197,198,200,208,212,243,257,259,268,270,299,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'map_def':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,135,157,166,168,193,197,198,200,208,212,243,257,259,268,270,280,299,312,314,315,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,316,40,328,330,332,]),'map_lookup':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,135,157,166,168,193,197,198,200,208,212,243,257,259,268,270,299,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'index_lookup':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,135,157,166,168,193,197,198,200,208,212,243,257,259,268,270,299,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'conditional_expression':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,135,157,166,168,193,197,198,200,208,212,243,257,259,268,270,299,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'attr_ref':([2,5,18,29,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,112,114,134,135,157,161,166,168,193,197,198,200,208,212,238,239,243,245,249,250,257,259,268,270,299,],[45,45,65,65,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,65,65,65,84,45,65,84,84,84,84,84,84,84,45,65,65,84,65,65,65,45,45,84,84,45,]),'if_body':([34,268,],[93,300,]),'operand_list':([55,166,193,],[102,223,250,]),'operand':([55,88,90,91,92,96,99,100,135,166,168,193,197,198,208,],[103,149,153,154,155,159,149,163,202,103,224,103,253,254,149,]),'pair_list':([56,271,],[105,302,]),'dict_key':([56,271,],[106,106,]),'pair_list_empty':([56,271,272,],[108,108,303,]),'multi':([66,120,190,335,336,],[118,193,245,339,340,]),'param_list':([68,69,100,196,],[121,128,164,252,]),'param_list_empty':([68,69,100,195,196,],[122,122,122,251,122,]),'param_list_element':([68,69,88,99,100,196,208,],[123,123,148,148,123,123,148,]),'wrapped_kwargs':([68,69,88,99,100,196,208,],[126,126,126,126,126,126,126,]),'function_param_list':([88,99,208,],[144,162,263,]),'function_param_list_empty':([88,99,207,208,],[145,145,262,145,]),'function_param_list_element':([88,99,208,],[146,146,146,]),'entity_body_outer':([111,113,237,240,],[169,184,282,285,]),'entity_body':([111,113,170,237,240,],[171,171,225,171,171,]),'attr':([111,113,170,171,225,237,240,],[173,173,173,228,228,173,173,]),'attr_type':([111,113,170,171,225,237,240,],[174,174,174,174,174,174,174,]),'attr_type_opt':([111,113,170,171,225,237,240,],[176,176,176,176,176,176,176,]),'attr_type_multi':([111,113,170,171,225,237,240,],[177,177,177,177,177,177,177,]),'attr_base_type':([111,113,170,171,225,237,240,],[178,178,178,178,178,178,178,]),'class_ref_list':([112,114,238,239,],[180,185,283,284,]),'implement_ns_list':([116,244,],[186,287,]),'id_list':([136,261,],[203,298,]),'stmt_list':([157,212,257,259,299,],[211,269,295,295,325,]),'implementation':([201,],[256,]),'implementation_head':([201,],[257,]),'if_next':([211,],[265,]),'block':([257,259,],[294,297,]),'constant_list':([275,276,],[305,309,]),'constants':([307,338,],[326,341,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> head body','main',2,'p_main','plyInmantaParser.py',116),
  ('head -> <empty>','head',0,'p_main_head','plyInmantaParser.py',124),
  ('head -> MLS','head',1,'p_main_head_doc','plyInmantaParser.py',129),
  ('body -> top_stmt body','body',2,'p_body_collect','plyInmantaParser.py',134),
  ('body -> empty','body',1,'p_body_term','plyInmantaParser.py',141),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',146),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',147),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',148),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',149),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',150),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',151),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',152),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',153),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',158),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',168),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',174),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',185),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',186),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',187),
  ('statement -> expression','statement',1,'p_stmt','plyInmantaParser.py',188),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',202),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list_empty','plyInmantaParser.py',209),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',214),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',220),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',226),
  ('if -> IF if_body END','if',3,'p_if_start','plyInmantaParser.py',233),
  ('if_body -> expression : stmt_list if_next','if_body',4,'p_if_body','plyInmantaParser.py',239),
  ('if_next -> empty','if_next',1,'p_if_end','plyInmantaParser.py',246),
  ('if_next -> ELSE : stmt_list','if_next',3,'p_if_else','plyInmantaParser.py',252),
  ('if_next -> ELIF if_body','if_next',2,'p_if_elif','plyInmantaParser.py',258),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',270),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',277),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',282),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',289),
  ('entity_body_outer -> MLS entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',294),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',299),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',304),
  ('entity_body_outer -> MLS END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',309),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',314),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',320),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',325),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',331),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',337),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',338),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',344),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',345),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',346),
  ('attr -> attr_type CID empty','attr',3,'p_attr_err','plyInmantaParser.py',351),
  ('attr -> attr_type CID = constant','attr',4,'p_attr_err','plyInmantaParser.py',352),
  ('attr -> attr_type CID = constant_list','attr',4,'p_attr_err','plyInmantaParser.py',353),
  ('attr -> attr_type CID = UNDEF','attr',4,'p_attr_err','plyInmantaParser.py',354),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',361),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',367),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',368),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',374),
  ('attr -> DICT empty CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',380),
  ('attr -> DICT empty CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',381),
  ('attr -> DICT empty CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',382),
  ('attr -> DICT ? CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',383),
  ('attr -> DICT ? CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',384),
  ('attr -> DICT ? CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',385),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',392),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',398),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',404),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',409),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',415),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',421),
  ('implement_ns_list -> ns_ref','implement_ns_list',1,'p_implement_ns_list_ref','plyInmantaParser.py',428),
  ('implement_ns_list -> PARENTS','implement_ns_list',1,'p_implement_ns_list_parents','plyInmantaParser.py',433),
  ('implement_ns_list -> implement_ns_list , implement_ns_list','implement_ns_list',3,'p_implement_ns_list_collect','plyInmantaParser.py',438),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list empty','implement_def',5,'p_implement','plyInmantaParser.py',443),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list MLS','implement_def',5,'p_implement','plyInmantaParser.py',444),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression empty','implement_def',7,'p_implement_when','plyInmantaParser.py',453),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression MLS','implement_def',7,'p_implement_when','plyInmantaParser.py',454),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',464),
  ('implementation -> implementation_head block','implementation',2,'p_implementation','plyInmantaParser.py',477),
  ('implementation_head -> :','implementation_head',1,'p_implementation_head','plyInmantaParser.py',482),
  ('implementation_head -> : MLS','implementation_head',2,'p_implementation_head_doc','plyInmantaParser.py',487),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',492),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation_deprecated','plyInmantaParser.py',498),
  ('relation -> class_ref ID multi REL multi class_ref ID MLS','relation',8,'p_relation_deprecated_comment','plyInmantaParser.py',509),
  ('relation -> relation_def MLS','relation',2,'p_relation_outer_comment','plyInmantaParser.py',548),
  ('relation -> relation_def','relation',1,'p_relation_outer','plyInmantaParser.py',555),
  ('relation_def -> class_ref . ID multi REL class_ref . ID multi','relation_def',9,'p_relation','plyInmantaParser.py',560),
  ('relation_def -> class_ref . ID multi REL class_ref','relation_def',6,'p_relation_unidir','plyInmantaParser.py',566),
  ('relation_def -> class_ref . ID multi operand_list class_ref . ID multi','relation_def',9,'p_relation_annotated','plyInmantaParser.py',572),
  ('relation_def -> class_ref . ID multi operand_list class_ref','relation_def',6,'p_relation_annotated_unidir','plyInmantaParser.py',578),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',584),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',589),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',594),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',599),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',607),
  ('typedef -> typedef_inner MLS','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',612),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING expression','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',619),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',626),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',634),
  ('expression -> boolean_expression','expression',1,'p_expression','plyInmantaParser.py',644),
  ('expression -> constant','expression',1,'p_expression','plyInmantaParser.py',645),
  ('expression -> function_call','expression',1,'p_expression','plyInmantaParser.py',646),
  ('expression -> var_ref','expression',1,'p_expression','plyInmantaParser.py',647),
  ('expression -> constructor','expression',1,'p_expression','plyInmantaParser.py',648),
  ('expression -> list_def','expression',1,'p_expression','plyInmantaParser.py',649),
  ('expression -> map_def','expression',1,'p_expression','plyInmantaParser.py',650),
  ('expression -> map_lookup','expression',1,'p_expression','plyInmantaParser.py',651),
  ('expression -> index_lookup','expression',1,'p_expression','plyInmantaParser.py',652),
  ('expression -> conditional_expression','expression',1,'p_expression','plyInmantaParser.py',653),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','plyInmantaParser.py',658),
  ('boolean_expression -> expression CMP_OP expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',663),
  ('boolean_expression -> expression IN expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',664),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',665),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',666),
  ('boolean_expression -> NOT expression','boolean_expression',2,'p_boolean_expression_not','plyInmantaParser.py',675),
  ('boolean_expression -> var_ref . ID IS DEFINED','boolean_expression',5,'p_boolean_expression_is_defined','plyInmantaParser.py',681),
  ('boolean_expression -> ID IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_short','plyInmantaParser.py',687),
  ('boolean_expression -> map_lookup IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_map_lookup','plyInmantaParser.py',693),
  ('operand -> expression','operand',1,'p_operand','plyInmantaParser.py',713),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',718),
  ('map_lookup -> var_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',719),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',720),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',725),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',731),
  ('function_call -> attr_ref ( function_param_list )','function_call',4,'p_function_call_err_dot','plyInmantaParser.py',738),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',743),
  ('dict_key -> RSTRING','dict_key',1,'p_r_string_dict_key','plyInmantaParser.py',749),
  ('dict_key -> STRING','dict_key',1,'p_string_dict_key','plyInmantaParser.py',754),
  ('pair_list -> dict_key : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',768),
  ('pair_list -> dict_key : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',769),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',778),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',779),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',784),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',790),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',796),
  ('conditional_expression -> expression ? expression : expression','conditional_expression',5,'p_conditional_expression','plyInmantaParser.py',803),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',813),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',814),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',821),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',827),
  ('constant -> TRUE','constant',1,'p_constant_true','plyInmantaParser.py',833),
  ('constant -> FALSE','constant',1,'p_constant_false','plyInmantaParser.py',839),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',845),
  ('constant -> RSTRING','constant',1,'p_constant_rstring','plyInmantaParser.py',851),
  ('constant -> MLS','constant',1,'p_constant_mls','plyInmantaParser.py',857),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',936),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',942),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',947),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',952),
  ('wrapped_kwargs -> * * operand','wrapped_kwargs',3,'p_wrapped_kwargs','plyInmantaParser.py',958),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',964),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',970),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',976),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',977),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',983),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',984),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',999),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',1006),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',1012),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',1013),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1019),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1020),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',1038),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',1044),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',1049),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',1054),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',1059),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',1065),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',1071),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',1082),
  ('class_ref -> var_ref . CID','class_ref',3,'p_class_ref_err_dot','plyInmantaParser.py',1088),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',1103),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',1109),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',1114),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',1119),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',1125),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',1131),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',1136),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',1142),
]
