"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import expression_pb2
import forall_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CustomPenaltyTerm(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TERM_FIELD_NUMBER: builtins.int
    FORALL_LIST_FIELD_NUMBER: builtins.int
    id: builtins.str
    name: builtins.str
    @property
    def term(self) -> expression_pb2.Expression: ...
    @property
    def forall_list(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[forall_pb2.Forall]: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        term: expression_pb2.Expression | None = ...,
        forall_list: collections.abc.Iterable[forall_pb2.Forall] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["term", b"term"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["forall_list", b"forall_list", "id", b"id", "name", b"name", "term", b"term"]) -> None: ...

global___CustomPenaltyTerm = CustomPenaltyTerm
