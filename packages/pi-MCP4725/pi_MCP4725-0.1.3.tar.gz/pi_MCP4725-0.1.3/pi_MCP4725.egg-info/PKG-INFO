Metadata-Version: 2.1
Name: pi-MCP4725
Version: 0.1.3
Summary: Python module to use the MCP4725 DAC with the Raspberry Pi
Home-page: https://github.com/sergiocaponi/pi_MCP4725
Download-URL: https://github.com/sergiocaponi/pi_MCP4725/archive/refs/tags/v0.1.3.tar.gz
Author: Sergio Caponi
Author-email: contactme@sergiocaponi.com
License: MIT
Keywords: Raspberry Pi,DAC,MCP4725
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Operating System :: POSIX :: Linux
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: System :: Hardware
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
License-File: LICENSE

A Python module for the Raspberry Pi to interface with the [MCP4725](https://ww1.microchip.com/downloads/en/devicedoc/22039d.pdf) IÂ²C Digital-to-Analogue Converter.

## Compatibility

Tested on Python 3.9 on a Raspberry Pi Zero W v1.1, but should be compatible with most Raspberry Pi models running the latest version of Python.

Module works with Microchip's MCP4725 DAC.

## Pre-requisites

- `smbus2` library

	The MCP4725 module uses the Raspberry Pi's built-in IÂ²C driver to communicate with the chip. This is done on Python using the SMBus protocol. However, due to SMBus incorporating only a subset of IÂ²C features, it is not fully compatible with IÂ²C commands. This is fixed by using `smbus2`, a drop-in replacement of the `smbus` module with extra functionality permitting the extra IÂ²C features. It can be imported as `smbus` to be backward compatible. See below for more details.

	The module must be imported within the main code (it is not imported within the module).
