[tool.poetry]
name = "markdown-data-tables"
version = "1.0.0"
description = "Embed data files such as YAML as tables in a Markdown document"
authors = ["Network to Code, LLC <info@networktocode.com>"]

[tool.poetry.dependencies]
python = "^3.8"
markdown = "^3.3.7"
pyyaml = "^6.0"
tabulate = "^0.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.0"
black = "^23.3.0"
pylint = "^2.17.0"
pydocstyle = "^6.3.0"
yamllint = "^1.30.0"
bandit = "^1.7.5"
invoke = "^2.0.0"
flake8 = {version = "^6.0.0", python = ">=3.8.1"}

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
ignore=".venv"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pydocstyle]
convention = "google"
inherit = false
match = "(?!__init__).*\\.py"
match-dir = "(?!tests|migrations|development)[^\\.].*"
# D212 is enabled by default in google convention, and complains if we have a docstring like:
# """
# My docstring is on the line after the opening quotes instead of on the same line as them.
# """
# We've discussed and concluded that we consider this to be a valid style choice.
add_ignore = "D212"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = "-vv --doctest-modules"
