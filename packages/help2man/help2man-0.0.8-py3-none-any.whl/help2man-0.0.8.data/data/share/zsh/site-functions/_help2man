#compdef help2man

# AUTOMATICALLY GENERATED by `shtab`


_shtab_help2man_commands() {
  local _commands=(
    
  )
  _describe 'help2man commands' _commands
}

_shtab_help2man_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "(- : *)"{-V,--version}"[show program\'s version number and exit]"
  "(- : *)--print-completion[print shell completion script]:print_completion:(bash zsh tcsh)"
  {-n,--name}"[description for the first paragraph, default\: \%(default)s]:name:"
  {-s,--section}"[section number for manual page, default\: \%(default)s]:section:"
  {-m,--manual}"[name of manual. default\: \%(default)s]:manual:"
  {-S,--source}"[source of program (FSF, Debian, ...). default\: \%(default)s]:source:"
  {-p,--info-page}"[name of Texinfo manual, default\: \%(default)s]:info_page:"
  {-i,--include}"[include material from a file]:include:_files"
  {-o,--output}"[send output]:output:_files"
  "--template[built-in template name. default\: \%(default)s]:template:(man markdown)"
  "--template-file[template file.]:template_file:_files"
  "--help-option[help option string, default\: \%(default)s]:help_option:"
  "--version-option[version option string, default\: \%(default)s]:version_option:"
  "--no-discard-stderr[include stderr when parsing option output]"
  ":executable program name:{_command_names -e}"
  "(-)*:executable program arguments:_normal"
)


_shtab_help2man() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_help2man_options[(I)${(q)one_or_more}*]} + ${_shtab_help2man_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_help2man_options+=(': :_shtab_help2man_commands' '*::: :->help2man')
  fi
  _arguments -C $_shtab_help2man_options

  case $state in
    help2man)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_help2man-$line[1]:"
      case $line[1] in
        
      esac
  esac
}



typeset -A opt_args
_shtab_help2man "$@"