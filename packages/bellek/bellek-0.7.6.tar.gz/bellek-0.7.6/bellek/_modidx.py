# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/bellek',
                'doc_host': 'https://bdsaglam.github.io',
                'git_url': 'https://github.com/bdsaglam/bellek',
                'lib_path': 'bellek'},
  'syms': { 'bellek.ml.clip': { 'bellek.ml.clip.ClipClassificationHead': ('ml.clip.html#clipclassificationhead', 'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipClassificationHead.__init__': ( 'ml.clip.html#clipclassificationhead.__init__',
                                                                                    'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipClassificationHead.forward': ( 'ml.clip.html#clipclassificationhead.forward',
                                                                                   'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipZeroShotClassifier': ('ml.clip.html#clipzeroshotclassifier', 'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipZeroShotClassifier.__init__': ( 'ml.clip.html#clipzeroshotclassifier.__init__',
                                                                                    'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipZeroShotClassifier.compute_text_features': ( 'ml.clip.html#clipzeroshotclassifier.compute_text_features',
                                                                                                 'bellek/ml/clip.py'),
                                'bellek.ml.clip.ClipZeroShotClassifier.forward': ( 'ml.clip.html#clipzeroshotclassifier.forward',
                                                                                   'bellek/ml/clip.py'),
                                'bellek.ml.clip.load_clip_preprocess': ('ml.clip.html#load_clip_preprocess', 'bellek/ml/clip.py'),
                                'bellek.ml.clip.make_tfms_from_clip_preprocess': ( 'ml.clip.html#make_tfms_from_clip_preprocess',
                                                                                   'bellek/ml/clip.py')},
            'bellek.ml.cocoop': { 'bellek.ml.cocoop.ClipVisualEncoder': ('ml.cocoop.html#clipvisualencoder', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.ClipVisualEncoder.__init__': ( 'ml.cocoop.html#clipvisualencoder.__init__',
                                                                                   'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.ClipVisualEncoder.forward': ( 'ml.cocoop.html#clipvisualencoder.forward',
                                                                                  'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearner': ('ml.cocoop.html#promptlearner', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearner.__init__': ( 'ml.cocoop.html#promptlearner.__init__',
                                                                               'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearner.forward': ('ml.cocoop.html#promptlearner.forward', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningClip': ('ml.cocoop.html#promptlearningclip', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningClip.__init__': ( 'ml.cocoop.html#promptlearningclip.__init__',
                                                                                    'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningClip.forward': ( 'ml.cocoop.html#promptlearningclip.forward',
                                                                                   'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningTextEncoder': ( 'ml.cocoop.html#promptlearningtextencoder',
                                                                                  'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningTextEncoder.__init__': ( 'ml.cocoop.html#promptlearningtextencoder.__init__',
                                                                                           'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.PromptLearningTextEncoder.forward': ( 'ml.cocoop.html#promptlearningtextencoder.forward',
                                                                                          'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.TextEncoder': ('ml.cocoop.html#textencoder', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.TextEncoder.__init__': ('ml.cocoop.html#textencoder.__init__', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.TextEncoder.forward': ('ml.cocoop.html#textencoder.forward', 'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.make_prompt_learning_clip': ( 'ml.cocoop.html#make_prompt_learning_clip',
                                                                                  'bellek/ml/cocoop.py'),
                                  'bellek.ml.cocoop.prepare_prompt_learning_clip': ( 'ml.cocoop.html#prepare_prompt_learning_clip',
                                                                                     'bellek/ml/cocoop.py')},
            'bellek.ml.data': { 'bellek.ml.data.ZippedDataLoader': ('ml.data.html#zippeddataloader', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataLoader.__init__': ('ml.data.html#zippeddataloader.__init__', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataLoader.__iter__': ('ml.data.html#zippeddataloader.__iter__', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataLoader.__next__': ('ml.data.html#zippeddataloader.__next__', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataset': ('ml.data.html#zippeddataset', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataset.__getitem__': ('ml.data.html#zippeddataset.__getitem__', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataset.__init__': ('ml.data.html#zippeddataset.__init__', 'bellek/ml/data.py'),
                                'bellek.ml.data.ZippedDataset.__len__': ('ml.data.html#zippeddataset.__len__', 'bellek/ml/data.py'),
                                'bellek.ml.data.fetch_imagenet_label_synsets': ( 'ml.data.html#fetch_imagenet_label_synsets',
                                                                                 'bellek/ml/data.py'),
                                'bellek.ml.data.get_imagenet_id_label_map': ('ml.data.html#get_imagenet_id_label_map', 'bellek/ml/data.py'),
                                'bellek.ml.data.get_imagenet_id_synset_map': ( 'ml.data.html#get_imagenet_id_synset_map',
                                                                               'bellek/ml/data.py'),
                                'bellek.ml.data.make_imagenet_id_synset_map': ( 'ml.data.html#make_imagenet_id_synset_map',
                                                                                'bellek/ml/data.py')},
            'bellek.ml.evaluation': { 'bellek.ml.evaluation.classification_summary': ( 'ml.evaluation.html#classification_summary',
                                                                                       'bellek/ml/evaluation.py'),
                                      'bellek.ml.evaluation.evaluate_slmc': ('ml.evaluation.html#evaluate_slmc', 'bellek/ml/evaluation.py'),
                                      'bellek.ml.evaluation.find_binary_clf_threshold': ( 'ml.evaluation.html#find_binary_clf_threshold',
                                                                                          'bellek/ml/evaluation.py')},
            'bellek.ml.experiment': { 'bellek.ml.experiment.main': ('ml.experiment.html#main', 'bellek/ml/experiment.py'),
                                      'bellek.ml.experiment.make_experiment_dir': ( 'ml.experiment.html#make_experiment_dir',
                                                                                    'bellek/ml/experiment.py'),
                                      'bellek.ml.experiment.make_run_experiment_sweep': ( 'ml.experiment.html#make_run_experiment_sweep',
                                                                                          'bellek/ml/experiment.py'),
                                      'bellek.ml.experiment.prepare_config': ( 'ml.experiment.html#prepare_config',
                                                                               'bellek/ml/experiment.py')},
            'bellek.ml.layer': { 'bellek.ml.layer.GradReverse': ('ml.layer.html#gradreverse', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.GradReverse.__init__': ('ml.layer.html#gradreverse.__init__', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.GradReverse.forward': ('ml.layer.html#gradreverse.forward', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.reverse_grad': ('ml.layer.html#reverse_grad', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.reverse_grad.backward': ('ml.layer.html#reverse_grad.backward', 'bellek/ml/layer.py'),
                                 'bellek.ml.layer.reverse_grad.forward': ('ml.layer.html#reverse_grad.forward', 'bellek/ml/layer.py')},
            'bellek.ml.loss': { 'bellek.ml.loss.BinaryFocalLoss': ('ml.loss.html#binaryfocalloss', 'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.__init__': ('ml.loss.html#binaryfocalloss.__init__', 'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.activation': ( 'ml.loss.html#binaryfocalloss.activation',
                                                                               'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.decodes': ('ml.loss.html#binaryfocalloss.decodes', 'bellek/ml/loss.py'),
                                'bellek.ml.loss.BinaryFocalLoss.forward': ('ml.loss.html#binaryfocalloss.forward', 'bellek/ml/loss.py')},
            'bellek.ml.mcd': { 'bellek.ml.mcd.DiscrepancyLoss': ('ml.mcd.html#discrepancyloss', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.DiscrepancyLoss.__call__': ('ml.mcd.html#discrepancyloss.__call__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.EnsembleMcdModel': ('ml.mcd.html#ensemblemcdmodel', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.EnsembleMcdModel.__init__': ('ml.mcd.html#ensemblemcdmodel.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.EnsembleMcdModel.forward': ('ml.mcd.html#ensemblemcdmodel.forward', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.EnsembleMcdModel.from_mcd_model': ( 'ml.mcd.html#ensemblemcdmodel.from_mcd_model',
                                                                                  'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Feature': ('ml.mcd.html#feature', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Feature.__init__': ('ml.mcd.html#feature.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Feature.forward': ('ml.mcd.html#feature.forward', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback': ('ml.mcd.html#mcdcallback', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback.__init__': ('ml.mcd.html#mcdcallback.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback._do_grad_opt': ('ml.mcd.html#mcdcallback._do_grad_opt', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback._do_one_batch': ('ml.mcd.html#mcdcallback._do_one_batch', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback._predict_source': ('ml.mcd.html#mcdcallback._predict_source', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback._predict_target': ('ml.mcd.html#mcdcallback._predict_target', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback.before_batch': ('ml.mcd.html#mcdcallback.before_batch', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdCallback.before_fit': ('ml.mcd.html#mcdcallback.before_fit', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader': ('ml.mcd.html#mcddataloader', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.__init__': ('ml.mcd.html#mcddataloader.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.__iter__': ('ml.mcd.html#mcddataloader.__iter__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.__len__': ('ml.mcd.html#mcddataloader.__len__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.__next__': ('ml.mcd.html#mcddataloader.__next__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.new': ('ml.mcd.html#mcddataloader.new', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataLoader.to': ('ml.mcd.html#mcddataloader.to', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataset': ('ml.mcd.html#mcddataset', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataset.__getitem__': ('ml.mcd.html#mcddataset.__getitem__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataset.__init__': ('ml.mcd.html#mcddataset.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdDataset.__len__': ('ml.mcd.html#mcddataset.__len__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdModel': ('ml.mcd.html#mcdmodel', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdModel.__init__': ('ml.mcd.html#mcdmodel.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.McdModel.forward': ('ml.mcd.html#mcdmodel.forward', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Predictor': ('ml.mcd.html#predictor', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Predictor.__init__': ('ml.mcd.html#predictor.__init__', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.Predictor.forward': ('ml.mcd.html#predictor.forward', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.discrepancy': ('ml.mcd.html#discrepancy', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.discrepancy_metric': ('ml.mcd.html#discrepancy_metric', 'bellek/ml/mcd.py'),
                               'bellek.ml.mcd.mcd_learner': ('ml.mcd.html#mcd_learner', 'bellek/ml/mcd.py')},
            'bellek.ml.vision': { 'bellek.ml.vision.Make3Channel': ('ml.vision.html#make3channel', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.Make3Channel.__call__': ('ml.vision.html#make3channel.__call__', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.Make3Channel.__repr__': ('ml.vision.html#make3channel.__repr__', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.TorchVisionTransform': ('ml.vision.html#torchvisiontransform', 'bellek/ml/vision.py'),
                                  'bellek.ml.vision.TorchVisionTransform.__init__': ( 'ml.vision.html#torchvisiontransform.__init__',
                                                                                      'bellek/ml/vision.py'),
                                  'bellek.ml.vision.TorchVisionTransform.encodes': ( 'ml.vision.html#torchvisiontransform.encodes',
                                                                                     'bellek/ml/vision.py')},
            'bellek.testing': { 'bellek.testing.fixture_directory': ('testing.html#fixture_directory', 'bellek/testing.py'),
                                'bellek.testing.fixture_path': ('testing.html#fixture_path', 'bellek/testing.py')},
            'bellek.utils': { 'bellek.utils.NestedDict': ('utils.html#nesteddict', 'bellek/utils.py'),
                              'bellek.utils.NestedDict.__init__': ('utils.html#nesteddict.__init__', 'bellek/utils.py'),
                              'bellek.utils.NestedDict.at': ('utils.html#nesteddict.at', 'bellek/utils.py'),
                              'bellek.utils.NestedDict.flat': ('utils.html#nesteddict.flat', 'bellek/utils.py'),
                              'bellek.utils.NestedDict.from_flat_dict': ('utils.html#nesteddict.from_flat_dict', 'bellek/utils.py'),
                              'bellek.utils.NestedDict.set': ('utils.html#nesteddict.set', 'bellek/utils.py'),
                              'bellek.utils.Path.ls_sorted': ('utils.html#path.ls_sorted', 'bellek/utils.py'),
                              'bellek.utils.context_chdir': ('utils.html#context_chdir', 'bellek/utils.py'),
                              'bellek.utils.flatten_dict': ('utils.html#flatten_dict', 'bellek/utils.py'),
                              'bellek.utils.generate_time_id': ('utils.html#generate_time_id', 'bellek/utils.py'),
                              'bellek.utils.most_common': ('utils.html#most_common', 'bellek/utils.py'),
                              'bellek.utils.unflatten_dict': ('utils.html#unflatten_dict', 'bellek/utils.py')}}}
