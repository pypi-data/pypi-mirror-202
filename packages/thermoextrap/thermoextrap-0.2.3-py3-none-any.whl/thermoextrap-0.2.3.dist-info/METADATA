Metadata-Version: 2.1
Name: thermoextrap
Version: 0.2.3
Summary: Thermodynamic extrapolation
Home-page: https://github.com/usnistgov/thermoextrap
Author-email: Jacob Monroe <jacob.monroe@nist.gov>, William Krekelberg <wpk@nist.gov>
License: "NIST license https://www.nist.gov/director/licensing"
Project-URL: homepage, https://github.com/usnistgov/thermoextrap
Project-URL: documentation, https://pages.nist.gov/thermoextrap/
Keywords: thermoextrap
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: License :: Public Domain
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: AUTHORS.md
Requires-Dist: numpy (>=1.20)
Requires-Dist: xarray (>=0.16)
Requires-Dist: sympy
Requires-Dist: scipy
Requires-Dist: cmomy (>=0.1.9)
Requires-Dist: custom-inherit
Requires-Dist: attrs
Provides-Extra: accel
Requires-Dist: bottleneck ; extra == 'accel'
Provides-Extra: all
Requires-Dist: thermoextrap[mbar] ; extra == 'all'
Requires-Dist: thermoextrap[gpr] ; extra == 'all'
Requires-Dist: thermoextrap[accel] ; extra == 'all'
Requires-Dist: thermoextrap[parallel] ; extra == 'all'
Requires-Dist: thermoextrap[viz] ; extra == 'all'
Provides-Extra: gpr
Requires-Dist: tensorflow ; extra == 'gpr'
Requires-Dist: tensorflow-probability ; extra == 'gpr'
Requires-Dist: gpflow ; extra == 'gpr'
Provides-Extra: mbar
Requires-Dist: pymbar (<4.0) ; extra == 'mbar'
Provides-Extra: openmm
Requires-Dist: openmm ; extra == 'openmm'
Provides-Extra: parallel
Requires-Dist: dask[complete] ; extra == 'parallel'
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Provides-Extra: viz
Requires-Dist: matplotlib ; extra == 'viz'

[![Repo][repo-badge]][repo-link]
[![Docs][docs-badge]][docs-link]
[![PyPI license][license-badge]][license-link]
[![PyPI version][pypi-badge]][pypi-link]
[![Conda (channel only)][conda-badge]][conda-link]
[![Code style: black][black-badge]][black-link]


[black-badge]: https://img.shields.io/badge/code%20style-black-000000.svg
[black-link]: https://github.com/ambv/black
[pypi-badge]: https://img.shields.io/pypi/v/thermoextrap
<!-- [pypi-badge]: https://badge.fury.io/py/thermoextrap -->
[pypi-link]: https://pypi.org/project/thermoextrap
[docs-badge]: https://img.shields.io/badge/docs-sphinx-informational
[docs-link]: https://pages.nist.gov/thermoextrap/
[repo-badge]: https://img.shields.io/badge/--181717?logo=github&logoColor=ffffff
[repo-link]: https://github.com/usnistgov/thermoextrap
[conda-badge]: https://img.shields.io/conda/v/wpk-nist/thermoextrap
[conda-link]: https://anaconda.org/wpk-nist/thermoextrap
<!-- Use total link so works from anywhere -->
[license-badge]: https://img.shields.io/pypi/l/cmomy?color=informational
[license-link]: https://github.com/usnistgov/thermoextrap/blob/master/LICENSE
<!-- For more badges, see https://shields.io/category/other and https://naereen.github.io/badges/ -->

[numpy]: https://numpy.org
[Numba]: https://numba.pydata.org/
[xarray]: https://docs.xarray.dev/en/stable/
[cmomy]: https://github.com/usnistgov/cmomy
[gpr-link]: https://github.com/usnistgov/thermoextrap/tree/master/examples/gpr_active_learning
[notebook-link]: https://github.com/usnistgov/thermoextrap/tree/master/examples/usage



# `thermoextrap`: Thermodynamic Extrapolation/Interpolation Library

This repository contains code used and described in references [^fn1] [^fn2].

[^fn1]: [Extrapolation and Interpolation Strategies for Efficiently Estimating Structural Observables as a Function of Temperature and Density](https://doi.org/10.1063/5.0014282)

[^fn2]: Leveraging Uncertainty Estimates and Derivative Information in Gaussian Process Regression for Expedited Data Collection in Molecular Simulations. In preparation.


## Overview

If you find this code useful in producing published works, please provide an appropriate citation.
Note that the second citation is focused on adding features that make use of GPR models based on derivative information produced by the core code base.
For now, the GPR code, along with more information, may be found under [here][gpr-link].
In a future release, we expect this to be fully integrated into the code base rather than a standalone module.

Code included here can be used to perform thermodynamic extrapolation and
interpolation of observables calculated from molecular simulations. This allows
for more efficient use of simulation data for calculating how observables change
with simulation conditions, including temperature, density, pressure, chemical
potential, or force field parameters. Users are highly encourage to work through
the [Jupyter Notebooks][notebook-link] presenting examples for
a variety of different observable functional forms. We only guarantee that this
code is functional for the test cases we present here or for which it has
previously been applied Additionally, the code may be in continuous development
at any time. Use at your own risk and always check to make sure the produced
results make sense. If bugs are found, please report them. If specific features
would be helpful just let us know and we will be happy to work with you to come
up with a solution.


## Features

* Fast calculation of derivatives

## Status

This package is actively used by the author.  Please feel free to create a pull request for wanted features and suggestions!


## Quick start

`thermoextrap` may be installed with either (recommended)
```bash
conda install -c wpk-nist thermoextrap
```
or
```bash
pip install thermoextrap
```

If you use pip, then you can include additional dependencies using
```bash
pip install thermoextrap[all]
```

If you install `thermoextrap` with conda, there are additional optional dependencies that take some care for installation.  We recommend installing the following via `pip`, as the versions on the conda/conda-forge channels are often a bit old.
```bash
pip install tensorflow tensorflow-probability gpflow
```

To install from source do the following:
```bash
git clone git@github.com:usnistgov/thermoextrap.git
cd thermoextrap
pip install . [-e]
```

To (optionally) include the example data do the following:
```bash
git submodule update --init  --recursive
```


## Example usage

```python
import thermoextrap

```

<!-- end-docs -->

## Documentation

See the [documentation][docs-link] for a look at `thermoextrap` in action.

To have a look at using `thermoextrap` with Gaussian process regression, look in the [gpr][docs/notebooks/gpr] directory.

## License

This is free software.  See [LICENSE][license-link].

## Related work

This package extensively uses the [cmomy] package to handle central comoments.


# Contact
Questions may be addressed to Bill Krekelberg at william.krekelberg@nist.gov or Jacob Monroe at jacob.monroe@uark.edu.


## Credits

This package was created with
[Cookiecutter](https://github.com/audreyr/cookiecutter) and the
[wpk-nist-gov/cookiecutter-pypackage](https://github.com/wpk-nist-gov/cookiecutter-pypackage)
Project template forked from
[audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage).

# History

## 0.0.1 (2021-01-04)

- First release on PyPI.

This software was developed by employees of the National Institute of Standards
and Technology (NIST), an agency of the Federal Government. Pursuant to title 17
United States Code Section 105, works of NIST employees are not subject to
copyright protection in the United States and are considered to be in the public
domain. Permission to freely use, copy, modify, and distribute this software and
its documentation without fee is hereby granted, provided that this notice and
disclaimer of warranty appears in all copies.

THE SOFTWARE IS PROVIDED 'AS IS' WITHOUT ANY WARRANTY OF ANY KIND, EITHER
EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY
THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND FREEDOM FROM
INFRINGEMENT, AND ANY WARRANTY THAT THE DOCUMENTATION WILL CONFORM TO THE
SOFTWARE, OR ANY WARRANTY THAT THE SOFTWARE WILL BE ERROR FREE. IN NO EVENT
SHALL NIST BE LIABLE FOR ANY DAMAGES, INCLUDING, BUT NOT LIMITED TO, DIRECT,
INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM, OR
IN ANY WAY CONNECTED WITH THIS SOFTWARE, WHETHER OR NOT BASED UPON WARRANTY,
CONTRACT, TORT, OR OTHERWISE, WHETHER OR NOT INJURY WAS SUSTAINED BY PERSONS OR
PROPERTY OR OTHERWISE, AND WHETHER OR NOT LOSS WAS SUSTAINED FROM, OR AROSE OUT
OF THE RESULTS OF, OR USE OF, THE SOFTWARE OR SERVICES PROVIDED HEREUNDER.

Distributions of NIST software should also include copyright and licensing
statements of any third-party software that are legally bundled with the code in
compliance with the conditions of those licenses.
