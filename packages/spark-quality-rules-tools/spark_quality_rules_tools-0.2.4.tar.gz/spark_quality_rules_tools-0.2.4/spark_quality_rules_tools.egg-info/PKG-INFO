Metadata-Version: 2.1
Name: spark-quality-rules-tools
Version: 0.2.4
Summary: spark_quality_rules_tools
Home-page: https://github.com/jonaqp/spark_quality_rules_tools/
Download-URL: https://github.com/jonaqp/spark_quality_rules_tools/archive/main.zip
Author: Jonathan Quiza
Author-email: jony327@gmail.com
Keywords: spark,dq,rules,hammurabies
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown
License-File: LICENSE

# spark_quality_rules_tools

[![Github License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)
[![Updates](https://pyup.io/repos/github/woctezuma/google-colab-transfer/shield.svg)](pyup)
[![Python 3](https://pyup.io/repos/github/woctezuma/google-colab-transfer/python-3-shield.svg)](pyup)
[![Code coverage](https://codecov.io/gh/woctezuma/google-colab-transfer/branch/master/graph/badge.svg)](codecov)

spark_quality_rules_tools is a Python library that implements quality rules in sandbox

## Installation

The code is packaged for PyPI, so that the installation consists in running:

```sh
pip install spark-quality-rules-tools --user --upgrade
```

## Usage

wrapper run hammurabies

![Process](./spark_quality_rules_tools/utils/external/folder_process.png)


## Sandbox

```sh
import os

from spark_quality_rules_tools.functions.generator import dq_path_workspace
from spark_quality_rules_tools.functions.generator import dq_download_jar
from spark_quality_rules_tools.functions.generator import dq_extract_parameters
from spark_quality_rules_tools.functions.generator import dq_run_sandbox
from spark_quality_rules_tools.functions.generator import dq_spark_session
from spark_quality_rules_tools.functions.generator import dq_validate_conf
from spark_quality_rules_tools.functions.generator import dq_validate_rules

project_sda="SDA_37036"
url_conf = "http://artifactory-gdt.central-02.nextgen.igrupobbva/artifactory/gl-datio-spark-libs-maven-local/com/datiobd/cdd-hammurabi/4.0.9/DQ_LOCAL_CONFS/KCOG/KCOG_branch_MRField.conf"


## Create workspace
dq_path_workspace(project_sda=project_sda)

## Download Jar Haas
dq_download_jar(haas_version="4.8.0",
                force=False)
                                                      
## Extract y Show Parameter                                 
dq_extract_parameters(url_conf=url_conf)


parameter_conf_list = [
 {      
    "ARTIFACTORY_UNIQUE_CACHE": "https://globaldevtools.bbva.com",
    "ODATE_DATE": "2022-11-11",
    "COUNTRY_ID": "PE",
    "SCHEMA_PATH": "t_kcog_branch.output.schema",
    "CUTOFF_DATE": "2022-11-11",
    "SCHEMAS_REPOSITORY": "da-datio/schemas/pe/kcog/master/t_kcog_branch/latest/"
 }
]
                  
## quality run_sandbox
dq_run_sandbox(parameter_conf_list=parameter_conf_list,
               url_conf=url_conf))

```

## Validations

```sh
url_conf = "http://artifactory-gdt.central-02.nextgen.igrupobbva/artifactory/gl-datio-spark-libs-maven-local/com/datiobd/cdd-hammurabi/4.0.9/DQ_LOCAL_CONFS/KCOG/KCOG_branch_MRField.conf"

## validate conf
dq_validate_conf(url_conf=url_conf)

## validate rules
dq_validate_rules(url_conf=url_conf)

```



## License

[Apache License 2.0](https://www.dropbox.com/s/8t6xtgk06o3ij61/LICENSE?dl=0).

## New features v1.0

## BugFix

- choco install visualcpp-build-tools

## Reference

- Jonathan Quiza [github](https://github.com/jonaqp).
- Jonathan Quiza [RumiMLSpark](http://rumi-ml.herokuapp.com/).
