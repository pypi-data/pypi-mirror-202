# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': 'src'}

packages = \
['findontime']

package_data = \
{'': ['*']}

install_requires = \
['Twisted==16.7.0rc2',
 'dash-bootstrap-components==1.4.1',
 'dataclasses==0.6',
 'fastq-handler>=0.2.0,<0.3.0',
 'natsort==8.3.1',
 'seaborn==0.12.2',
 'sqlalchemy==1.4.23',
 'xopen==1.7.0']

entry_points = \
{'console_scripts': ['findontime = findontime.__main__:main']}

setup_kwargs = {
    'name': 'findontime',
    'version': '0.1.0',
    'description': 'A tool to upload Fastq files to the INSaFLU database and perform metagenomics pathogen detection',
    'long_description': '# findONTime\n\n**A tool to upload fastq files (fastq or fastq.gz format) to the INSaFLU-TELEVIR platform and launch the metagenomics pathogen detection analysis using the TELEVIR module**\n\n## Motivation\n\nReducing the time needed for pathogen detection and the sequencing costs per sample is crucial in the context of diagnostics using metagenomics sequencing. In fact, when performing hypothesis-free viral diagnosis by sequencing complex biological samples, the proportion of the virus in a sample is unknown. As such, the amount of sequencing data, and consequently run length, needed to accurately detect the virus cannot be predicted a priori. [name of the tool] runs concurrently with MinION sequencing and monitors the FASTQ files that are being generated in real-time for each sample, merges the files (at user defined time intervals), uploads them to the INSaFLU-TELEVIR platform and launches the metagenomics virus detection analysis using the TELEVIR module. This allows users to detect a virus in a sample as early as possible during the sequencing run, reducing the time gap between obtaining the sample and the diagnosis, and also reducing sequencing costs (as ONT runs can be stopped at any time and the flow cells can be cleaned and reused). [name of the tool] can be used as a “start-to-end” solution or for particular tasks (e.g., merging ONT output files, metadata preparation and upload to INSaFLU-TELEVIR).\n\n## Introduction\n\nThe _insaflu-upload_ tool uploads fastq files to the INSaFLU-TELEVIR platform (docker installation or local server), and launches themetagenomics pathogen detection analysis using the [TELEVIR](https://insaflu.readthedocs.io/en/latest/metagenomics_virus_detection.html) module. The tool relies on _fastq-handler_, a package to monitor and process outputs of ONT runs, upload the reads, launch TELEVIR projects and generates a report with the results.\n\n## Details\n\nThe user has the option to upload all files collected throughout the ONT run (sampling occurs at user-defined period) or only upload the last file (i.e, the file compiling all reads generated until the lastest sampling point).\nFor upload, metadata files are also generated for each sequence file, according to the INSaFLU-TELEVIR input template file. Metadata files are stored in the metadata sub-directory following the output directory specified by the user.\n\n### Upload\n\n_insaflu-upload_ can interact with the INSaFLU-TELEVIR platfotm in two ways:\n\n- **Docker**. The user needs to have docker installed and running. The tool will then upload the files to the docker image. The user needs to provide the name of the docker image and the path for uploads.\n\n- **SSH**. The user needs to have access to the database server. The tool will then upload the files to the database using SSH. The user needs to provide the path for uploads and the credentials for the database server.\n\n### INSaFLU-TELEVIR\n\nThe tool creates one INSaFLU-TELEVIR project for each directory containing fastq files. The project name is the name of the directory. Files generated within the same directory are uploaded to the same project.\n\n### Input Files\n\n- **fastq.gz** - Output directory for the ONT run, containing sequence files. The files can be in subfolders. The files can be gzipped or not.\n\n- **config.ini** - A configuration file containing the parameters for the tool. The file is generated by the tool when it is run for the first time. The user can edit the file to change the parameters.\n\nConfig must contain:\n\n- section [INSAFLU] containing insaflu username and app directory path.\n\n- (optional) section [SSH] containing ssh credentials: username, ip_address and rsa key;\n\n- (optional) section [DOCKER] containing docker image name.\n\nsee example [config.ini](config.ini)\n\n## API\n\n```bash\n\nusage: findontime [-h] -i IN_DIR -o OUT_DIR [-s SLEEP] [-n TAG] [--config CONFIG] [--max_size MAX_SIZE] [--merge] [--downsize] [--upload {last,all}] [--connect {docker,ssh}] [--keep_names] [--monitor] [--televir]\n\nProcess fastq files.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i IN_DIR, --in_dir IN_DIR\n                        Input directory\n  -o OUT_DIR, --out_dir OUT_DIR\n                        Output directory\n  -s SLEEP, --sleep SLEEP\n                        Sleep time between checks in monitor mode\n  -n TAG, --tag TAG     name tag, if given, will be added to the output file names\n  --config CONFIG       config file\n  --max_size MAX_SIZE   max size of the output file, in kilobytes\n  --merge               merge files\n  --downsize            downsize fastq files\n  --upload {last,all}   file upload stategy (default: all)\n  --connect {docker,ssh}\n                        file upload stategy (default: docker)\n  --keep_names          keep original file names\n  --monitor             monitor directory until killed\n  --televir             deploy televir pathogen identification on each sample\n\n```\n\n### REQUIREMENTS\n\n** Modules **\n\n- **python 3.6** or higher\n- dataclasses==0.6\n- natsort==8.3.1\n- pandas==1.5.3\n- paramiko==3.1.0\n- pip==21.2.3\n- setuptools==57.4.0\n- xopen==1.7.0\n\n### INSTALLATION\n\n```bash\npython -m venv .venv\nsource .venv/bin/activate\npython -m pip install findontime\n```\n\n### USAGE\n\n```bash\nfindontime -i test_run/ -o test_new -d test_new --tag another -s 5 --merge –televir\n\n```\n\n### TESTING\n\nRunning pytest in the root directory will run all tests that do not interact with INSaFLU-TELEVIR. In order to test the upload and metagenomics functionalities, the user needs to provide a valid config file to a local docker installation, and to pass the `--docker` flag to pytest:\n\n```bash\n\npytest --docker --config-file config.ini\n\n```\n\n### OUTPUT\n\n> **Note:** The output directory structure is maintained.\n\n- **fastq.gz** files containing all reads from the previous files.\n- **log.txt** file containing the concatenation process.\n- **metadata** individual metadata files for each fastq file uploaded.\n- **results.tsv** file containing the results of the pathogen detection. One file per project.\n\n## Maintainers\n\n- [**@santosjgnd**](https://github.com/SantosJGND)\n- [**@insaflu**](https://github.com/insapathogenomics)\n',
    'author': 'SantosJGND',
    'author_email': 'dourado.jns@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': None,
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.9,<4.0',
}


setup(**setup_kwargs)
