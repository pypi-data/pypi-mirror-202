import unittest
from src.commons.utils import sanitize

class TestSqlScape(unittest.TestCase):

    def test_sanitize_none_value(self):
        self.assertEqual(sanitize(None), 'null', "Should be null")

    def test_sanitize_a_simple_string(self):
        self.assertEqual(sanitize('ABC'), "'ABC'", "Should be 'ABC'")

    def test_sanitize_a_string_with_1001_chars(self):
        self.assertEqual(sanitize(
            '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789' +
            '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789' +
            '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789' +
            '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789' +
            '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789' +
            '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789' +
            '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789' +
            '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789' +
            '0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789' +
            '01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'
        ), 
        "'0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789" +
        "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789" +
        "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789" +
        "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789" +
        "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789" +
        "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789" +
        "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789" +
        "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789" +
        "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789" +
        "0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789' ||\n'0'"  
        , "Should break the string in 1000 and 1 char")

    
    

if __name__ == '__main__':
    unittest.main()
